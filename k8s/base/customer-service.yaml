apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-service
  labels:
    app: customer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-service
  template:
    metadata:
      labels:
        app: customer-service
    spec:
      containers:
        - name: customer-service
          image: customer_service:latest
          ports:
            - containerPort: 8002
          env:
            # DB config
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: global-config
                  key: CUSTOMER_DB_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: global-config
                  key: CUSTOMER_DB_NAME
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: global-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: global-secrets
                  key: POSTGRES_PASSWORD

            # RabbitMQ config
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: global-config
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: global-config
                  key: RABBITMQ_PORT
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: global-secrets
                  key: RABBITMQ_USER
            - name: RABBITMQ_PASS
              valueFrom:
                secretKeyRef:
                  name: global-secrets
                  key: RABBITMQ_PASS
---
apiVersion: v1
kind: Service
metadata:
  name: customer-service
  labels:
    app: customer-service
spec:
  type: LoadBalancer
  selector:
    app: customer-service
  ports:
    - port: 8002
      targetPort: 8000
